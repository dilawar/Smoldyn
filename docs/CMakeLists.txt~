cmake_minimum_required(VERSION 3.1)
project(smoldyn-doc LANGUAGES)

# This is based on an excellent tutorial by Sy Brand
# https://devblogs.microsoft.com/cppblog/clear-functional-c-documentation-with-sphinx-breathe-doxygen-cmake/

set(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/../cmake)
set(SITE_DIRECCTORY ${CMAKE_CURRENT_SOURCE_DIR}/../site)

find_package(Perl REQUIRED)
find_package(Doxygen REQUIRED)
find_package(Sphinx REQUIRED)

# Find all the public headers
file(GLOB_RECURSE SMOLDYN_PUBLIC_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/../source/*.h)

# These are used in Doxygen.in file.
set(SMOLDYN_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/../source)
set(SMOLDYN_DOC_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/)
set(DOXYGEN_OUTPUT_DIR ${CMAKE_BINARY_DIR}/doxygen)
set(DOXYGEN_INDEX_FILE ${DOXYGEN_OUTPUT_DIR}/xml/index.xml)

set(DOXYGEN_IN ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile.in)
set(DOXYGEN_OUT ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile)
configure_file(${DOXYGEN_IN} ${DOXYGEN_OUT})

# Only regenerate when headers and Doxyfile changes.
add_custom_command(OUTPUT ${DOXYGEN_INDEX_FILE}
    COMMAND ${DOXYGEN_EXECUTABLE} ${DOXYFILE_OUT}
    DEPENDS ${SMOLDYN_PUBLIC_HEADERS}
    MAIN_DEPENDENCY ${DOXYFILE_OUT} ${DOXYFILE_IN}
    COMMENT "Generating docs"
    VERBATIM)

# Nice named target so we can run the job easily
add_custom_target(Doxygen ALL DEPENDS ${DOXYGEN_INDEX_FILE})

add_custom_target(apidoc COMMAND
    COMMAND pdoc3 --html --force -o ${SITE_DIRECCTORY}/smoldyn-api smoldyn
    WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
    COMMENT "Building api docs (HTML)")

# This builds the site to ${SITE_DIRECCTORY}
add_custom_target(html COMMAND
    COMMAND mkdocs build
    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
    COMMENT "Building html doc")

add_custom_target(livehtml COMMAND
    COMMAND mkdocs serve
    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
    COMMENT "Building html doc")



# Add an install target to install the docs
include(GNUInstallDirs)
install(DIRECTORY ${SPHINX_BUILD} DESTINATION ${CMAKE_INSTALL_DOCDIR})
